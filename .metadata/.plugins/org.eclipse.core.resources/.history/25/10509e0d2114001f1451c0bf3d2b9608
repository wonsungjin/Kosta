package com.kosta.sample.board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.kosta.sample.board.MyOracleConnection;
import com.kosta.sample.json.EmpVO;
public class BoardDAO {

	MyOracleConnection mc = new MyOracleConnection();
	public int boardDelete(int empno) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int delCount = 0;
		try {
			conn = mc.oracleConn().getConnection();
			// String 은 불변이기 때문에 계속 4바이트씩 메모리차지 하게됨
			// String sql = "delete from emp where empno="+empno;
			// 프리페어 스테이트먼트의 바인딩
			String sql = "delete from emp where empno=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, empno);// 런타임시 동적 바인딩
									// 1번째 물음표에 , 넣을값)
			delCount = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			mc.oracleClose(conn, pstmt);
		}
		return delCount;
	}
	public ArrayList<EmpVO> boardSelect() {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<EmpVO> list = null;
		String sql = "select * from emp";
		try {
			conn = mc.oracleConn().getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			list = new ArrayList();
			while (rs.next() == true) {
				EmpVO emp = new EmpVO();
				emp.setEname(rs.getString("ename"));
				emp.setEmpno(rs.getInt("empno"));
				list.add(emp);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			mc.oracleClose(conn, pstmt, rs);
		}
		return list;
	}
}
